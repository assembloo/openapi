openapi: 3.0.1
info:
  version: "v1"
  title: Authorization (sub) API
  description: Sub API to handle authorization on a service.
  contact:
    email: support@assembloo.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
    
paths:

##### AUTHORIZATIONS #####

  /authorizations/search:
    post:
      summary: Search authorizations
      tags:
      - Authorizations
      requestBody:
        $ref: "#/components/requestBodies/SearchRequest"
      responses:
        '200':
          $ref: '#/components/responses/SearchResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /authorizations:
    get:
      summary: List authorizations
      tags:
      - Authorizations
      parameters:
      - "$ref": "#/components/parameters/pageParam"
      responses:
        '200':
          $ref: '#/components/responses/SearchResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      summary: Creates an authorization
      tags:
      - Authorizations
      requestBody:
        $ref: "#/components/requestBodies/AuthorizationRequest"
      responses:
        '200':
          description: Authorization successfully created
          content:
            application/json:
              schema:
                type: string
                description: the ID of the created object
        '400':
          description: Bad request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          description: Invalid authorization definition
  /authorizations/{authorizationId}:
    parameters:
    - "$ref": "#/components/parameters/authorizationIdParam"
    get:
      summary: Returns an authorization by ID
      tags:
      - Authorizations
      responses:
        '200':
          description: An authorization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authorization"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Authorization not found
    put:
      summary: Updates an authorization
      tags:
      - Authorizations
      requestBody:
        $ref: "#/components/requestBodies/AuthorizationRequest"
      responses:
        '200':
          description: authorization successfully updated
          content:
            application/json:
              schema:
                type: string
                description: the ID of the updated object
        '400':
          description: Bad request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          description: Invalid authorization definition
    delete:
      summary: Deletes a authorization by ID
      tags:
      - Authorizations
      responses:
        '200':
          description: The authorization was deleted
          content:
            application/json:
              schema:
                type: string
                description: the ID of the deleted object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Authorization not found          
          
##### AUTHORIZATION ASSIGNMENTS #####
  /authorizations/assignments/search:
    post:
      summary: Search the authorization assignments
      tags:
      - AuthorizationAssignments
      requestBody:
        $ref: "#/components/requestBodies/SearchRequest"
      responses:
        '200':
          $ref: '#/components/responses/SearchResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
          
  /authorizations/assignments:
    get:
      summary: List the authorization assignments
      tags:
      - AuthorizationAssignments
      parameters:
      - "$ref": "#/components/parameters/pageParam"
      responses:
        '200':
          $ref: '#/components/responses/SearchResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      summary: Creates a authorization assignment
      tags:
      - AuthorizationAssignments
      requestBody:
        $ref: "#/components/requestBodies/AuthorizationAssignmentRequest"
      responses:
        '200':
          description: authorization assignment successfully created
          content:
            application/json:
              schema:
                type: string
                description: the ID of the created object
        '400':
          description: Bad request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          description: Invalid authorization assignment data
  /authorizations/assignments/{authorizationAssignmentId}:
    parameters:
    - "$ref": "#/components/parameters/authorizationAssignmentIdParam"
    get:
      summary: Returns a authorization assignment by ID
      tags:
      - AuthorizationAssignments
      responses:
        '200':
          description: A authorization assignment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationAssignment"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Authorization assignment not found
    delete:
      summary: Deletes a authorization assignment by ID
      tags:
      - AuthorizationAssignments
      responses:
        '200':
          description: The authorization assignment was deleted
          content:
            application/json:
              schema:
                type: string
                description: the ID of the deleted object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Authorization assignment not found

components:
  schemas:
    Authorization:
      type: object
      description: represents an Authorization
      properties:
        id:
          type: string
        description:
          type: string
        attributes:
          type: array
          description: an optional array of tags that can be assigned to an authorization. Note that tags are completely free-form
          items:
          type: object
          additionalProperties:
            type: string
      required:
      - role_id

    RoleBasedAuthorization:
      allOf:
      - $ref: '#/components/schemas/Authorization'
      - type: object
      description: represents a role along with it's related authorizations
      properties:
        authorizations:
          type: array
          description: an optional list of authorization
          items:
            $ref: '#/components/schemas/RoleAssignableAuthorization'
            description: the definitin of an authorization

    RoleAssignableAuthorization:
      oneOf:
        - $ref: '#/components/schemas/PermissionBasedAuthorization'
        - $ref: '#/components/schemas/WildcardBasedAuthorization'
      description: represents a authorization that can be assigned to a role
      discriminator:
        propertyName: objectType
        mapping:
          permission: '#/components/schemas/PermissionBasedAuthorization'
          wildcard: '#/components/schemas/WildcardBasedAuthorization'

    PermissionBasedAuthorization:
      allOf:
      - $ref: '#/components/schemas/Authorization'
      - type: object
      description: represents a permission

    WildcardBasedAuthorization:
      allOf:
      - $ref: '#/components/schemas/Authorization'
      - type: object
      description: the definitin of a wildcard permission such as 'printer:print:lp123' or 'printer:*'

    AuthorizationAssignment:
      type: object
      description: List of authorization given to users on specific resources
      properties:
        id:
          type: string
        subject_id:
          type: string
          description: user or group this authorization applies to
        authorization_id:
          type: string
        resource:
          type: string
          description: the path to the resource that the authorization applies to
      required:
      - subject_id
      - authorization_id
      - resource

  parameters:
    pageParam:
      name: page
      in: query
      description: Page number
      schema:
        type: integer
        minimum: 0
        default: 0
    authorizationIdParam:
      in: path
      name: authorizationId
      schema:
        type: string
      required: true
      description: The authorization id
    authorizationAssignmentIdParam:
      in: path
      name: authorizationAssignmentId
      schema:
        type: string
      required: true
      description: The authorization assignment id

  requestBodies:
    SearchRequest:
      description: The structure to describe the search wanted and what to return
      required: true
      content:
        application/json:
          schema:
            $ref: "https://raw.githubusercontent.com/assembloo/openapi/1.0.0/repository-search.yml#/components/schemas/SearchRequest"
            
    AuthorizationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Authorization"
            
    AuthorizationAssignmentRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthorizationAssignment"
    
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      
    SearchResponse:
      description: A search response of the given object
      content:
        application/json:
          schema:
            $ref: "https://raw.githubusercontent.com/assembloo/openapi/1.0.0/repository-search.yml#/components/schemas/SearchResponse"
  
tags:
  - name: Authorizations
  - name: AuthorizationAssignments

# EOF