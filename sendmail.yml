openapi: 3.0.1
servers:
  - description: Assembloo production API
    url: https://sendmail.assembloo.com
info:
  version: "v1"
  title: SendMail API
  description: An API to send emails
  contact:
    email: support@assembloo.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
    
paths:
##### SERVICE #####
  /:
    post:
      summary: Creates an email service
      tags:
      - SendMail
      requestBody:
        $ref: "#/components/requestBodies/EmailServiceRequest"
      responses:
        '200':
          description: Email service successfully created
          content:
            application/json:
              schema:
                type: string
                description: the ID of the created object
        '400':
          description: Bad request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          description: Conflict
        '422':
          description: Invalid email service data
  /{serviceId}:
    parameters:
    - "$ref": "#/components/parameters/serviceIdParam"
    get:
      summary: Returns an email service by ID
      tags:
      - SendMail
      responses:
        '200':
          description: An email service
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailService"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Email service not found
    delete:
      summary: Deletes an email service by ID
      tags:
      - SendMail
      responses:
        '200':
          description: The email service was deleted
          content:
            application/json:
              schema:
                type: string
                description: the ID of the deleted object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Email service not found

##### SEND #####
  /{serviceId}/send:
    parameters:
    - "$ref": "#/components/parameters/serviceIdParam"
    post:
      summary: Send a mail
      operationId: send_mail
      tags:
      - SendMail
      requestBody:
        $ref: "#/components/requestBodies/SendMailRequest"
      responses:
        '200':
          description: The mail was sent
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

##### SMTP SETTINGS #####
  /{serviceId}/settings:
    parameters:
    - "$ref": "#/components/parameters/serviceIdParam"
    get:
      operationId: get_smtp_settings
      summary: Return the smtp settings
      tags:
      - SendMail
      responses:
        '200':
          description: The smtp settings
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmtpSettings"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      summary: Updates the smtp settings
      operationId: update_smtp_settings
      tags:
      - SendMail
      requestBody:
        $ref: "#/components/requestBodies/SmtpSettingsRequest"
      responses:
        '200':
          description: The smtp settings was updated
          content:
            application/json:
              schema:
                type: string
                description: the ID of the updated object
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    EmailService:
      type: object
      properties:
        id:
          type: string
          pattern: "^[a-z]+[a-z0-9\\-\\.]*$"
      required:
      - id
      example:
        id: my-email-service

    SmtpSettings:
      type: object
      description: describes STMP settings
      properties:
        id:
          type: string
        hostName:
          type: string
          description: the name of the smtp server
        portNumber:
          type: integer
          format: int32
          description: the port of the smtp server
        security: 
          $ref: '#/components/schemas/Security'
          description: the type of security          
        authentication: 
          $ref: '#/components/schemas/Authentication'
          description: the type of authentication
        username:
          type: string
          description: the username (if applicable)
        password:
          type: string
          description: password needed to connect (if applicable)
      required:
      - hostName
      - portNumber
      - security
      - authentication

    Security: 
      type: string
      enum: 
      - NONE
      - STARTTLS
      - SSL_TLS

    Authentication: 
      type: string
      enum: 
      - NONE
      - NORMAL_PASSWORD
      - ENCRYPTED_PASSWORD
      - KERBEROS
      - NTLM
      - OAUTH2

    SendMailRequest:
      type: object
      description: describe the mail to send
      properties:
        smtpSettingsId:
          type: string
        subject:
          type: string
          description: the subject of the mail
        body:
          type: string
          description: the body of the mail
        to:
          type: array
          description: a list of email addresses
          items:
            type: string
        cc:
          type: array
          description: a list of email addresses
          items:
            type: string
            description: the subject of the mail
        bcc:
          type: array
          description: a list of email addresses
          items:
            type: string
            description: the subject of the mail
        reply-to:
          type: string
          description: the reply to address
        attachments:
          type: array
          description: a list of attachments
          items:
            $ref: '#/components/schemas/Attachment'
      required:
      - subject
      - body
      - to

    Attachment:
      type: object
      description: A mail attachment
      properties:
        name:
          type: string
        data:
          type: string
          description: a Mime base64 encoded string
      required:
      - name
      - data

  parameters:
    serviceIdParam:
      in: path
      name: serviceId
      schema:
        type: string
      required: true
      description: The id of the service the smtp sub-service is mounted on

  requestBodies:

    EmailServiceRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailService'

    SendMailRequest:
      description: The structure to describe the search wanted and what to return
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SendMailRequest"

    SmtpSettingsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SmtpSettings"
    
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid

    InternalError:
      description: An error has occured

tags:
  - name: SendMail
    description: "A datastore contains one or more tables. A table holds the records that will search on."

security:
  - bearerAuth: []
  
# EOF
